#!/bin/bash
set -eux
: ${CKAN_INIT:=}

export PGPASSWORD=$POSTGRES_PASSWORD
fail_counter=0

run_psql="psql -h $POSTGRES_HOST -p $POSTGRES_PORT -U $POSTGRES_USER postgres -qAt -c"
run_psql_ckan=${run_psql/postgres/ckan}

while true; do

    if [[ $fail_counter -gt 10 ]]; then
        >&2 echo 'Exceed max retries' && exit 1
    fi

    if ! pg_isready -h $POSTGRES_HOST -p $POSTGRES_PORT -d ckan; then
        fail_counter=$((fail_counter+1))
        sleep 20
    else
        postgis_stat=$($run_psql_ckan "SELECT 1 FROM pg_extension where extname = 'postgis'")

        # probably not strictly necessary since PostGIS should come bundled
        # when databases are create
        if [[ "$postgis_stat" = '1' ]]; then
            break
        else
            echo "PostGIS not installed"
            fail_counter=$((fail_counter+1))
            sleep 20
        fi
    fi
done


if [[ "$CKAN_INIT" = "true" ]]; then
    "$CKAN_HOME/bin/paster" --plugin=ckan db init -c "${CKAN_CONFIG}/ckan.ini"
    "$CKAN_HOME/bin/paster" --plugin=ckanext-spatial spatial initdb -c "${CKAN_CONFIG}/ckan.ini"
    "$CKAN_HOME/bin/paster" --plugin=ckanext-harvest harvester initdb -c "${CKAN_CONFIG}/ckan.ini"
    "$CKAN_HOME/bin/paster" --plugin=ckanext-googleanalytics initdb -c "${CKAN_CONFIG}/ckan.ini"
    psql -h "$POSTGRES_HOST" -p "$POSTGRES_PORT" -U "$POSTGRES_USER" ckan -q -f /scripts/ckan_cleanup_funcs.sql
fi
